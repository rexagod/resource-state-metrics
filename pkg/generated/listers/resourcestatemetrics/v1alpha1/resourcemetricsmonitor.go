/*
Copyright 2024 The Kubernetes resource-state-metrics Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	resourcestatemetricsv1alpha1 "github.com/rexagod/resource-state-metrics/pkg/apis/resourcestatemetrics/v1alpha1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// ResourceMetricsMonitorLister helps list ResourceMetricsMonitors.
// All objects returned here must be treated as read-only.
type ResourceMetricsMonitorLister interface {
	// List lists all ResourceMetricsMonitors in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*resourcestatemetricsv1alpha1.ResourceMetricsMonitor, err error)
	// ResourceMetricsMonitors returns an object that can list and get ResourceMetricsMonitors.
	ResourceMetricsMonitors(namespace string) ResourceMetricsMonitorNamespaceLister
	ResourceMetricsMonitorListerExpansion
}

// resourceMetricsMonitorLister implements the ResourceMetricsMonitorLister interface.
type resourceMetricsMonitorLister struct {
	listers.ResourceIndexer[*resourcestatemetricsv1alpha1.ResourceMetricsMonitor]
}

// NewResourceMetricsMonitorLister returns a new ResourceMetricsMonitorLister.
func NewResourceMetricsMonitorLister(indexer cache.Indexer) ResourceMetricsMonitorLister {
	return &resourceMetricsMonitorLister{listers.New[*resourcestatemetricsv1alpha1.ResourceMetricsMonitor](indexer, resourcestatemetricsv1alpha1.Resource("resourcemetricsmonitor"))}
}

// ResourceMetricsMonitors returns an object that can list and get ResourceMetricsMonitors.
func (s *resourceMetricsMonitorLister) ResourceMetricsMonitors(namespace string) ResourceMetricsMonitorNamespaceLister {
	return resourceMetricsMonitorNamespaceLister{listers.NewNamespaced[*resourcestatemetricsv1alpha1.ResourceMetricsMonitor](s.ResourceIndexer, namespace)}
}

// ResourceMetricsMonitorNamespaceLister helps list and get ResourceMetricsMonitors.
// All objects returned here must be treated as read-only.
type ResourceMetricsMonitorNamespaceLister interface {
	// List lists all ResourceMetricsMonitors in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*resourcestatemetricsv1alpha1.ResourceMetricsMonitor, err error)
	// Get retrieves the ResourceMetricsMonitor from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*resourcestatemetricsv1alpha1.ResourceMetricsMonitor, error)
	ResourceMetricsMonitorNamespaceListerExpansion
}

// resourceMetricsMonitorNamespaceLister implements the ResourceMetricsMonitorNamespaceLister
// interface.
type resourceMetricsMonitorNamespaceLister struct {
	listers.ResourceIndexer[*resourcestatemetricsv1alpha1.ResourceMetricsMonitor]
}
